stages:
  - download
  - build

download:
  stage: download
  variables:
    GIT_STRATEGY: none
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  before_script:
    - apk add --no-cache wget grep
  script:
    # Fetch latest version from github.
    - VERSION="$(wget -qO- https://github.com/revive-adserver/revive-adserver/releases | grep -oP '(?<=releases\/tag\/)(.*?)(?=\">)' | awk 'NR==1{print $1}' | head -1)"
    - VERSION=${VERSION#?} # Remove "v"
    - echo "${VERSION}" > version.txt
    # Fetch latest version SHA from revive page.
    - wget https://download.revive-adserver.com/revive-adserver-${VERSION}.tar.gz
    - SHA=$(wget -qO- https://www.revive-adserver.com/download | grep -oP "(?<=sha256:)(\S*)(?=</li>)" | tail -1)
    - echo "SHA ${SHA}, Check $(sha256sum revive-adserver-${VERSION}.tar.gz)"
    - echo "${SHA#?}  revive-adserver-${VERSION}.tar.gz" | sha256sum -c -
    - mv revive-adserver-${VERSION}.tar.gz revive.tar.gz
  artifacts:
    expire_in: 1 day
    paths:
      - version.txt
      - revive.tar.gz

containerize:
  needs:
    - download
  stage: build
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  script:
    - VERSION=$(cat version.txt)
    - TAG_LIST=$(helper "${CI_REGISTRY_IMAGE}" "${VERSION},latest")
    - docker buildx build --platform "linux/amd64,linux/arm64" --build-arg REVIVE_VERSION="${VERSION}" --progress plain --push ${TAG_LIST} .
  only:
    - master
  tags:
    - protected
    - buildx


